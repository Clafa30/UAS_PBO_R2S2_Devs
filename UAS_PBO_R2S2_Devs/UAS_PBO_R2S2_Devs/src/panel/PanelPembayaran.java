/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package panel;

import Customer.HalamanUtama;
import DataDAO.DataDAO;
import Login.DbConnection;
import Login.LoginSession;
import PanelBottom.PanelRincian;
import java.awt.Point;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.JScrollPane;
import javax.swing.JViewport;
import javax.swing.table.DefaultTableModel;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;

/**
 *
 * @author rolis
 */
public final class PanelPembayaran extends javax.swing.JPanel {
    private DataDAO dataDAO;
    private static PanelPembayaran instance;
    private HalamanUtama halamanUtama;
    private DefaultTableModel tableModel; // Model data untuk tabel
    private int lastMouseY;
    
    //inisialisasi set method
    String selectedMethod;
    
    // Inisialisasi grand total
    double grandTotal;

    public PanelPembayaran(HalamanUtama halamanUtama) {
        System.out.println("Membuat PanelPembayaran..");
        this.halamanUtama = halamanUtama;
        this.dataDAO = new DataDAO(halamanUtama);
        
        // Pastikan semua komponen diinisialisasi terlebih dahulu
        initComponents();  // Inisialisasi komponen GUI     
        
        setPaymntMethdField(selectedMethod);
        TotalPesananField.setText(Double.toString(grandTotal));
        
        // Setelah itu, atur model tabel
        tableModel = new DefaultTableModel(new Object[][]{}, new String[]{"pesanan", "harga", "jumlah", "total"});
        jTable1.setModel(tableModel); // Hubungkan model ke tabel     
    }
    
    public static synchronized PanelPembayaran getInstance(HalamanUtama halamanUtama) {
        if (instance == null) {
            instance = new PanelPembayaran(halamanUtama); // Membuat instance baru jika belum ada
        }
        return instance;
    }
    
    public void setHalamanUtama(HalamanUtama halamanUtama) {
        if (halamanUtama == null) {
            System.out.println("HalamanUtama belum diteruskan.");
        } else {
            System.out.println("HalamanUtama berhasil diteruskan.");
            this.halamanUtama = halamanUtama;
        }
    } 

    public DefaultTableModel getRincianTableModel() {
        // Akses panelRincian1 melalui HalamanUtama
        return halamanUtama.getPanelPembayaran().getTableModel();
    }
    
    public DefaultTableModel getTableModel() {
        return tableModel;
    }
    
    public void refreshTable() {
        DefaultTableModel tableModel = getTableModel();  // Dapatkan model tabel
        tableModel.fireTableDataChanged();  // Segera memperbarui tampilan tabel
        revalidate();  // Revalidate untuk memastikan tampilan diperbarui
        repaint();  // Repaint untuk memastikan perubahan terlihat
    } 
    
    public void setPaymntMethdField(String text) {
        MethdPaymntField.setText(text);  // Memperbarui JumlahBayarField
    }

    public void setTotalPesananField(String Text) {
        TotalPesananField.setText(Double.toString(grandTotal));
    }
    
    public void setNomorMejnField(String text) {
        String nomorMeja = ""; // Variabel untuk menyimpan nomor meja

        try (Connection conn = DbConnection.getConnection()) {
            if (conn == null) {
                System.out.println("Koneksi database gagal.");
                return;
            }

            // Query untuk mendapatkan nomor meja berdasarkan pelanggan ID
            String query = "SELECT no_meja FROM pelanggan WHERE pelanggan_id = ?";
            PreparedStatement stmt = conn.prepareStatement(query);
            stmt.setString(1, LoginSession.pelangganId); // Gunakan pelanggan ID dari sesi login

            ResultSet rs = stmt.executeQuery();

            // Jika ada data yang ditemukan, ambil nomor meja
            if (rs.next()) {
                nomorMeja = rs.getString("no_meja");
            }

            // Set nomor meja ke field jika ditemukan
            NomorMejaField.setText(nomorMeja);

        } catch (SQLException e) {
            e.printStackTrace();
            System.out.println("Error saat mengambil nomor meja: " + e.getMessage());
        }
    } 
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        menu = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        DropDownPymnt = new javax.swing.JComboBox<>();
        jPanel4 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        TotalPesananField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        NomorMejaField = new javax.swing.JTextField();
        VerifikasiPaymentButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        MethdPaymntField = new javax.swing.JTextField();
        BackBtn = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout());

        menu.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        menu.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(0, 0));
        jPanel1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanel1MouseDragged(evt);
            }
        });
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel1MousePressed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Pesanan", "Harga", "Jumlah", "Total"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        jLabel2.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jLabel2.setText("Rincian Pesanan");
        jLabel2.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        jLabel3.setFont(new java.awt.Font("SansSerif", 1, 15)); // NOI18N
        jLabel3.setText("Pembayaran");

        jLabel7.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabel7.setText("Pilih Metode Pembayaran :");

        DropDownPymnt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "QRIS", "GOPAY", "OVO", "SHOPEEPAY", "BCA", "MANDIRI" }));
        DropDownPymnt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DropDownPymntActionPerformed(evt);
            }
        });

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel5.setText("Total Pesanan : ");

        TotalPesananField.setEditable(false);
        TotalPesananField.setBackground(new java.awt.Color(255, 255, 255));
        TotalPesananField.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        TotalPesananField.setBorder(null);
        TotalPesananField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TotalPesananFieldActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabel6.setText("Nomor Meja : ");

        NomorMejaField.setEditable(false);
        NomorMejaField.setBackground(new java.awt.Color(255, 255, 255));
        NomorMejaField.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        NomorMejaField.setBorder(null);
        NomorMejaField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NomorMejaFieldActionPerformed(evt);
            }
        });

        VerifikasiPaymentButton.setText("Verifikasi Pembayaran");
        VerifikasiPaymentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VerifikasiPaymentButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabel1.setText("Metode Pembayaran :");

        jLabel4.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel4.setText("Detail Pembayaran");

        MethdPaymntField.setEditable(false);
        MethdPaymntField.setBackground(new java.awt.Color(255, 255, 255));
        MethdPaymntField.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        MethdPaymntField.setBorder(null);
        MethdPaymntField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MethdPaymntFieldActionPerformed(evt);
            }
        });

        BackBtn.setText("BackBtn");
        BackBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(107, 107, 107))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel4Layout.createSequentialGroup()
                                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel4Layout.createSequentialGroup()
                                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                            .addComponent(jLabel6)
                                            .addGap(60, 60, 60)))
                                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel4Layout.createSequentialGroup()
                                            .addComponent(NomorMejaField, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(0, 0, Short.MAX_VALUE))
                                        .addComponent(TotalPesananField)))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addGap(18, 18, 18)
                                    .addComponent(MethdPaymntField, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(149, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(BackBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(VerifikasiPaymentButton))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(MethdPaymntField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(TotalPesananField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(NomorMejaField)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(VerifikasiPaymentButton)
                    .addComponent(BackBtn))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(DropDownPymnt, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DropDownPymnt, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        menu.setViewportView(jPanel1);

        add(menu, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void jPanel1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MousePressed
        // TODO add your handling code here:
        lastMouseY = evt.getY();
    }//GEN-LAST:event_jPanel1MousePressed

    private void jPanel1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseDragged
        // TODO add your handling code here:
         int deltaY = lastMouseY - evt.getY();
        lastMouseY = evt.getY(); // Perbarui posisi terakhir mouse

        // Dapatkan viewport dari JScrollPane
        JViewport viewport = menu.getViewport();
        Point viewPosition = viewport.getViewPosition();

        // Geser viewport berdasarkan perubahan vertikal (deltaY)
        viewPosition.translate(0, deltaY); // Geser vertikal, tidak horizontal
        menu.getViewport().setViewPosition(viewPosition);
    }//GEN-LAST:event_jPanel1MouseDragged

    private void DropDownPymntActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DropDownPymntActionPerformed
        // Ambil item yang dipilih dari dropdown
        selectedMethod = (String) DropDownPymnt.getSelectedItem(); // Misalnya "Cash", "Credit", dll.

        // Set nilai pada field MethdPaymntField berdasarkan pilihan dropdown
        setPaymntMethdField(selectedMethod);  // Mengisi MethdPaymntField dengan metode pembayaran yang dipilih
    }//GEN-LAST:event_DropDownPymntActionPerformed

    private void NomorMejaFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NomorMejaFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NomorMejaFieldActionPerformed

    private void VerifikasiPaymentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VerifikasiPaymentButtonActionPerformed
        String pelangganId = LoginSession.pelangganId; // Dapatkan pelanggan ID
        if (pelangganId == null || pelangganId.isEmpty()) {
            System.out.println("Pelanggan ID tidak ditemukan. Pastikan pengguna telah login.");
            return;
        }

        try (Connection conn = DbConnection.getConnection()) {
            if (conn == null) {
                System.out.println("Koneksi database gagal.");
                return;
            }

            // 1. Ambil semua data keranjang terkait pelanggan
            String selectKeranjangQuery = "SELECT keranjang_id, menu_id, nama_menu, harga, jumlah, total FROM keranjang WHERE pelanggan_id = ?";
            try (PreparedStatement selectKeranjangStmt = conn.prepareStatement(selectKeranjangQuery)) {
                selectKeranjangStmt.setString(1, pelangganId);
                ResultSet rs = selectKeranjangStmt.executeQuery();

                // Jika keranjang kosong
                if (!rs.isBeforeFirst()) {
                    System.out.println("Keranjang kosong. Tidak ada item untuk diverifikasi.");
                    JOptionPane.showMessageDialog(null, "Keranjang Anda kosong. Tidak ada item untuk diverifikasi.",
                            "Verifikasi Gagal", JOptionPane.WARNING_MESSAGE);
                    return;
                }

                // 2. Siapkan query untuk tabel pesanan dan update keranjang
                String insertPesananQuery = "INSERT INTO riwayat (pelanggan_id, keranjang_id, menu_id, nama_menu, harga, jumlah, total, status_pembayaran, status_pesanan, tanggal_pemesanan) "
                                            + "VALUES (?, ?, ?, ?, ?, ?, ?, 'Paid', 'Diproses', NOW())";

                try (PreparedStatement insertPesananStmt = conn.prepareStatement(insertPesananQuery)) {
                    double grandTotal = 0.0; // Total keseluruhan pesanan

                    // 3. Iterasi hasil keranjang dan tambahkan ke pesanan
                    while (rs.next()) {
                        String pelId = LoginSession.pelangganId;
                        int keranjangId = rs.getInt("keranjang_id");
                        String menuId = rs.getString("menu_id");
                        String namaMenu = rs.getString("nama_menu");
                        double harga = rs.getDouble("harga");
                        int jumlah = rs.getInt("jumlah");
                        double total = rs.getDouble("total");

                        // Tambahkan data ke tabel riwayat
                        insertPesananStmt.setString(1, pelId);
                        insertPesananStmt.setInt(2, keranjangId);
                        insertPesananStmt.setString(3, menuId);
                        insertPesananStmt.setString(4, namaMenu);
                        insertPesananStmt.setDouble(5, harga);
                        insertPesananStmt.setInt(6, jumlah);
                        insertPesananStmt.setDouble(7, total); // Masukkan total
                        insertPesananStmt.addBatch();

                        grandTotal += total; // Hitung total keseluruhan
                    }

                    // 4. Eksekusi batch untuk memasukkan data pesanan
                    int[] rowsInserted = insertPesananStmt.executeBatch();
                    System.out.println("Data pesanan berhasil dimasukkan: " + rowsInserted.length + " item.");

                    // 5. Tampilkan konfirmasi pembayaran
                    JOptionPane.showMessageDialog(null, String.format("Pembayaran berhasil diverifikasi.\nTotal Pesanan: Rp %.2f", grandTotal),
                            "Verifikasi Pembayaran", JOptionPane.INFORMATION_MESSAGE);

                    // 6. Pindahkan data ke tabel pesanan
                    dataDAO.MoveRiwayat();

                    // 7. Refresh tabel di halaman utama
                    halamanUtama.resetAllPanels();
                    this.halamanUtama.showHalamanUtama();
                } catch (SQLException e) {
                    e.printStackTrace();
                    System.out.println("Error saat memverifikasi pembayaran: " + e.getMessage());
                }
            } catch (SQLException e) {
                e.printStackTrace();
                System.out.println("Error saat mengambil data keranjang: " + e.getMessage());
            }
        } catch (SQLException e) {
            e.printStackTrace();
            System.out.println("Error saat membuat koneksi ke database: " + e.getMessage());
        }
    }//GEN-LAST:event_VerifikasiPaymentButtonActionPerformed

    private void MethdPaymntFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MethdPaymntFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MethdPaymntFieldActionPerformed

    private void TotalPesananFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TotalPesananFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TotalPesananFieldActionPerformed

    private void BackBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackBtnActionPerformed
        System.out.println("Memanggil metode showHalamanUtama...");
        this.halamanUtama.showHalamanUtama();
    }//GEN-LAST:event_BackBtnActionPerformed
    
private void customizeScrollPanel() {
            // Konfigurasi scrollbar
        menu.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);
        menu.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_NEVER);

        // Hapus UI scrollbar
        menu.getHorizontalScrollBar().setUI(null);
        menu.getVerticalScrollBar().setUI(null);

        // Tambahkan listener untuk drag
        jPanel1.addMouseListener(new MouseAdapter() {
            public void mousePressed(MouseEvent evt) {
                jPanel1MousePressed(evt);
            }
        });

        jPanel1.addMouseMotionListener(new MouseAdapter() {
            public void mouseDragged(MouseEvent evt) {
                jPanel1MouseDragged(evt);
            }
        });
    }
 
public void LoadRincian() {
    System.out.println("Memanggil metode LoadRincian...");
    try (Connection conn = DbConnection.getConnection()) {
        if (conn == null) {
            System.out.println("Koneksi database gagal.");
            return;
        }

        // Query untuk mengambil data dari keranjang
        String query = "SELECT nama_menu, harga, jumlah, total FROM keranjang WHERE pelanggan_id = ?";
        PreparedStatement stmt = conn.prepareStatement(query);
        stmt.setString(1, LoginSession.pelangganId); // Gunakan pelanggan ID dari sesi login

        ResultSet rs = stmt.executeQuery();

        // Periksa apakah ada data yang ditemukan
        if (!rs.isBeforeFirst()) {
            System.out.println("Tidak ada data ditemukan dalam query.");
        }

        // Tambahkan data baru ke model tabel
        while (rs.next()) {
            String pesanan = rs.getString("nama_menu");
            double harga = rs.getDouble("harga");
            int jumlah = rs.getInt("jumlah");
            double total = rs.getDouble("total");

            System.out.println("Pesanan: " + pesanan + ", Harga: " + harga + ", Jumlah: " + jumlah + ", Total: " + total);

            tableModel.addRow(new Object[]{pesanan, harga, jumlah, total});
        }
        
        // Set data pada field setelah rincian di-load
        setPaymntMethdField(selectedMethod); // Misalnya, set metode pembayaran default
        setTotalPesananField(Double.toString(grandTotal));  // Set total pesanan
        setNomorMejnField("5");    // Misalnya, set nomor meja
        
        refreshTable();
        System.out.println("Data berhasil dimuat ke tabel.");

    } catch (SQLException e) {
        e.printStackTrace();
        System.out.println("Error saat memuat data ke tabel: " + e.getMessage());
    }
}

public void grandTotal(){
           // Ambil pelanggan_id dari session login
        String pelangganId = LoginSession.pelangganId;

        // SQL query untuk menghitung grand total dari keranjang berdasarkan pelanggan_id
        String query = "SELECT SUM(total) AS grand_total FROM keranjang WHERE pelanggan_id = ?";

        // Membuka koneksi ke database
        try (Connection conn = DbConnection.getConnection()) {
            if (conn == null) {
                System.out.println("Koneksi database gagal.");
                return;
            }

            // Menyiapkan statement untuk query
            try (PreparedStatement pstmt = conn.prepareStatement(query)) {
                pstmt.setString(1, pelangganId);  // Set pelanggan_id yang sedang aktif

                // Eksekusi query dan ambil hasilnya
                ResultSet rs = pstmt.executeQuery();

                // Ambil grand total dari query result
                if (rs.next()) {
                    grandTotal = rs.getDouble("grand_total");
                }

                // Set nilai grand total ke field TotalPesananField
                setTotalPesananField(Double.toString(grandTotal));  // Tampilkan grand total pada field
            } catch (SQLException e) {
                System.out.println("Error saat mengambil grand total keranjang: " + e.getMessage());
            }
        } catch (SQLException e) {
            System.out.println("Error saat koneksi ke database: " + e.getMessage());
        }
}

private void refreshHalamanUtama() {
    HalamanUtama halamanUtama = new HalamanUtama();
    PanelRincian panelRincian1 = halamanUtama.getPanelRincian1();
    if (panelRincian1 != null) {
        panelRincian1.refreshTable();           // Perbarui tabel
        dataDAO.loadDataFromKeranjang();       // Pastikan data baru terload
        dataDAO.loadTotalFromKeranjang(panelRincian1); // Perbarui total
    }
    halamanUtama.setVisible(true);
}


    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackBtn;
    private javax.swing.JComboBox<String> DropDownPymnt;
    private javax.swing.JTextField MethdPaymntField;
    private javax.swing.JTextField NomorMejaField;
    private javax.swing.JTextField TotalPesananField;
    private javax.swing.JButton VerifikasiPaymentButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JScrollPane menu;
    // End of variables declaration//GEN-END:variables
}
